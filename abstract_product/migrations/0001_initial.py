# Generated by Django 2.2.2 on 2019-10-05 03:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.CharField(max_length=255, null=True, verbose_name='Slug')),
                ('is_active', models.BooleanField()),
                ('preview_image_url', models.CharField(max_length=512, null=True, verbose_name='Preview Image Url')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Abstract Product',
                'verbose_name_plural': 'Abstract Products',
                'db_table': 'abstract_product',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AbstractProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('preview_image_url', models.CharField(max_length=512, null=True, verbose_name='Preview Image Url')),
                ('sort_index', models.IntegerField()),
                ('is_active', models.BooleanField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Abstract Product Category',
                'verbose_name_plural': 'Abstract Product Categories',
                'db_table': 'abstract_product_category',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AbstractProductSide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('abstract_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='side_set', to='abstract_product.AbstractProduct')),
            ],
            options={
                'verbose_name': 'Abstract Product Side',
                'verbose_name_plural': 'Abstract Product Side',
                'db_table': 'abstract_product_side',
                'ordering': ['id'],
                'unique_together': {('abstract_product', 'type')},
            },
        ),
        migrations.CreateModel(
            name='AbstractProductVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('base_cost', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='BaseCost')),
                ('currency', models.CharField(max_length=100, verbose_name='Currency')),
                ('sku', models.CharField(max_length=100, verbose_name='SKU')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Variant',
                'verbose_name_plural': 'Product Variants',
                'db_table': 'abstract_product_variant',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('select_type', models.CharField(max_length=100, verbose_name='Select Type')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_attributes', to='abstract_product.AbstractProduct', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product Attribute',
                'verbose_name_plural': 'Product Attributes',
                'db_table': 'abstract_product_attribute',
                'ordering': ['id'],
                'unique_together': {('product', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, verbose_name='Product Attribute Label')),
                ('value', models.CharField(max_length=100, verbose_name='Product Attribute Value')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('attribute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_attributes_value_set', to='abstract_product.ProductAttribute', verbose_name='Product Attribute Name')),
            ],
            options={
                'verbose_name': 'Product Attribute Value',
                'verbose_name_plural': 'Product Attribute Values',
                'db_table': 'abstract_product_attribute_value',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CategoryProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category_set', to='abstract_product.AbstractProductCategory', verbose_name='Category')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_category_set', to='abstract_product.AbstractProduct', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Abstract Product - Category',
                'verbose_name_plural': 'Abstract Product - Category',
                'db_table': 'abstract_product_abstract_category',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AbstractProductVariantAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('attribute_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='abstract_product.ProductAttributeValue')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_value_set', to='abstract_product.AbstractProductVariant')),
            ],
            options={
                'verbose_name': 'Abstract Product Variant Attribute',
                'verbose_name_plural': 'Abstract Product Variant Attribute',
                'db_table': 'abstract_product_variant_attribute',
                'ordering': ['id'],
                'unique_together': {('variant', 'attribute_value')},
            },
        ),
        migrations.AddField(
            model_name='abstractproductvariant',
            name='attributes_value',
            field=models.ManyToManyField(related_name='variant_set', through='abstract_product.AbstractProductVariantAttribute', to='abstract_product.ProductAttributeValue'),
        ),
        migrations.AddField(
            model_name='abstractproductvariant',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='abstract_product_variants', to='abstract_product.AbstractProduct', verbose_name='Product'),
        ),
        migrations.CreateModel(
            name='AbstractProductMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('base_cost', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='Base Cost')),
                ('currency', models.CharField(max_length=100, verbose_name='Currency')),
                ('frame_width', models.IntegerField(null=True)),
                ('frame_height', models.IntegerField(null=True)),
                ('offset_width', models.IntegerField(null=True)),
                ('offset_height', models.IntegerField(null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('abstract_product', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='abstract_product.AbstractProduct')),
                ('default_variant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_of_product', to='abstract_product.AbstractProductVariant')),
            ],
            options={
                'verbose_name': 'Abstract Product Meta',
                'verbose_name_plural': 'Abstract Products Meta',
                'db_table': 'abstract_product_meta',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='abstractproduct',
            name='categories',
            field=models.ManyToManyField(related_name='child_abstract_products', through='abstract_product.CategoryProduct', to='abstract_product.AbstractProductCategory'),
        ),
        migrations.CreateModel(
            name='ProductSideImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_image_url', models.CharField(blank=True, max_length=100, null=True)),
                ('frame_center_x', models.IntegerField(null=True)),
                ('frame_center_y', models.IntegerField(null=True)),
                ('frame_width', models.IntegerField(null=True)),
                ('frame_height', models.IntegerField(null=True)),
                ('minimum_dpi', models.IntegerField(default=500)),
                ('preview_image_width', models.IntegerField(null=True)),
                ('preview_image_height', models.IntegerField(null=True)),
                ('frame_ratio_width', models.IntegerField(default=1)),
                ('frame_ratio_height', models.IntegerField(default=1)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_image_set', to='abstract_product.AbstractProduct')),
                ('product_artwork_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='side_image_set', to='abstract_product.AbstractProductSide')),
            ],
            options={
                'verbose_name': 'Product Side Images',
                'verbose_name_plural': 'Product Side Images',
                'db_table': 'abstract_product_side_images',
                'ordering': ['id'],
                'unique_together': {('product', 'product_artwork_info')},
            },
        ),
    ]
