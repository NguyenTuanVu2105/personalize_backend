# Generated by Django 2.2.2 on 2020-05-13 05:45

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('shop', '0016_shop_create_text_search_trigger_20200219_1445'),
        ('abstract_product', '0036_remove_abstractproductmockupinfo_enable_preview'),
        ('user_product', '0059_artworkfusioninfo_dnd_scale'),
    ]

    operations = [
        migrations.CreateModel(
            name='EcommerceUnsyncedProduct',
            fields=[
                ('id', models.BigAutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('product_meta', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Product Meta')),
                ('is_active', models.BooleanField(default=True)),
                ('create_time', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('update_time', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('ecommerce', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecommerce_set', to='shop.Ecommerce', verbose_name='Ecommerce')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_set', to='shop.Shop', verbose_name='Shop')),
                ('user_product_mapping', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_product_set', to='user_product.UserProduct', verbose_name='UserProduct')),
            ],
            options={
                'verbose_name': 'Ecommerce Unsync Product',
                'verbose_name_plural': 'Ecommerce Unsync Product',
                'db_table': 'user_ecommerce_unsync_product',
                'ordering': ['update_time'],
            },
        ),
        migrations.CreateModel(
            name='EcommerceUnsyncVariant',
            fields=[
                ('id', models.BigAutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('variant_meta', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Variant Meta')),
                ('sku', models.CharField(blank=True, max_length=100, null=True, verbose_name='SKU')),
                ('is_active', models.BooleanField(default=True)),
                ('ecommerce_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ecommerce_variant_set', to='user_product.EcommerceUnsyncedProduct', verbose_name='Shop')),
                ('user_variant_mapping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_variant_mapping_set', to='user_product.UserVariant', verbose_name='Shop')),
            ],
            options={
                'verbose_name': 'Ecommerce Unsync Variant',
                'verbose_name_plural': 'Ecommerce Unsync Variant',
                'db_table': 'user_ecommerce_unsync_variant',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserVariantArtworkFusion',
            fields=[
                ('id', models.BigAutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('artwork_fusion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_variant_artwork_fusion_set', to='user_product.ArtworkFusion', verbose_name='Artwork Fusion')),
                ('user_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_variant_artwork_set', to='user_product.UserVariant', verbose_name='User Variant')),
                ('variant_side', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variant_side_set', to='abstract_product.AbstractProductSide', verbose_name='Abstract Product Side')),
            ],
            options={
                'verbose_name': 'User Product Artwork',
                'verbose_name_plural': 'User Product Artworks',
                'db_table': 'user_variant_artwork_fusion',
                'ordering': ['id'],
                'unique_together': {('user_variant', 'variant_side', 'artwork_fusion')},
            },
        ),
    ]
