# Generated by Django 2.2.2 on 2019-10-05 03:07

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('shop', '0001_initial'),
        ('abstract_product', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('file_url', models.CharField(max_length=512, verbose_name='Artwork Url')),
                ('width', models.IntegerField(default=0)),
                ('height', models.IntegerField(default=0)),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sha256', models.CharField(max_length=270)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artwork_set', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Artwork',
                'verbose_name_plural': 'Artworks',
                'db_table': 'artwork',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ShopUserProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, max_length=20, null=True)),
                ('sync_status', models.CharField(blank=True, choices=[('Syncing', 'Syncing'), ('Synced', 'Synced'), ('Error', 'Error')], max_length=20, null=True, verbose_name='Sync Status')),
                ('sync_status_message', models.TextField(null=True, verbose_name='Sync Status Message')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_product_set', to='shop.Shop', verbose_name='Shop')),
            ],
            options={
                'verbose_name': 'Shop User Product',
                'verbose_name_plural': 'Shop User Product',
                'db_table': 'shop_user_product',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_image_url', models.CharField(max_length=512, null=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('abstract_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_product_set', to='abstract_product.AbstractProduct', verbose_name='User')),
                ('shop', models.ManyToManyField(related_name='user_products_set', through='user_product.ShopUserProduct', to='shop.Shop')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_set', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Product',
                'verbose_name_plural': 'User Product',
                'db_table': 'user_product',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserVariant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, verbose_name='SKU')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('abstract_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_product_variant_set', to='abstract_product.AbstractProductVariant', verbose_name='Abstract Variant')),
                ('user_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_product_variant_set', to='user_product.UserProduct', verbose_name='User Product')),
            ],
            options={
                'verbose_name': 'User Variant',
                'verbose_name_plural': 'User Variant',
                'db_table': 'user_variant',
                'ordering': ['id'],
                'unique_together': {('user_product', 'abstract_variant')},
            },
        ),
        migrations.CreateModel(
            name='UserVariantPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=3, verbose_name='Currency')),
                ('value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('base_cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('user_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prices', to='user_product.UserVariant', verbose_name='User Variant')),
            ],
            options={
                'db_table': 'user_variant_price',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='shopuserproduct',
            name='user_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shop_user_product_set', to='user_product.UserProduct', verbose_name='User Product'),
        ),
        migrations.CreateModel(
            name='UserVariantSideMockup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mockup_url', models.CharField(max_length=512, verbose_name='Mockup Url')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('product_side', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_variant_set', to='abstract_product.AbstractProductSide', verbose_name='Abstract Product Side')),
                ('user_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mockup_per_side', to='user_product.UserVariant', verbose_name='User Variant')),
            ],
            options={
                'verbose_name': 'User Variant Side Mockup',
                'verbose_name_plural': 'User Variant Side Mockups',
                'db_table': 'user_variant_side_mockup',
                'ordering': ['id'],
                'unique_together': {('user_variant', 'product_side')},
            },
        ),
        migrations.CreateModel(
            name='UserProductArtwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('framed_artwork_url', models.CharField(default='', max_length=512)),
                ('meta', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Meta')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('artwork', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user_product.Artwork', verbose_name='Artwork')),
                ('product_side', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_set', to='abstract_product.AbstractProductSide', verbose_name='Abstract Product Side')),
                ('user_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='side_set', to='user_product.UserProduct', verbose_name='User Product')),
            ],
            options={
                'verbose_name': 'User Product Artwork',
                'verbose_name_plural': 'User Product Artworks',
                'db_table': 'user_product_artwork',
                'ordering': ['id'],
                'unique_together': {('user_product', 'product_side', 'artwork')},
            },
        ),
    ]
