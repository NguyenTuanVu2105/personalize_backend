# Generated by Django 2.2.2 on 2020-04-27 10:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('user', '0026_auto_20200317_0911'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRateLimitDefault',
            fields=[
                ('view', models.CharField(blank=True, choices=[('1', 'create_user_product'), ('2', 'update_user_product'), ('3', 'preview_mockup'), ('4', 'push_all_user_product_to_shop'), ('5', 'upload_artwork_chunk')], default='1', max_length=2, primary_key=True, serialize=False)),
                ('rate_limit', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'User Rate Limit Default',
                'verbose_name_plural': 'User Rate Limit Defaults',
                'db_table': 'user_rate_limit_default',
                'ordering': ['view'],
            },
        ),
        migrations.CreateModel(
            name='UserLimit',
            fields=[
                ('id', models.BigAutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('view', models.CharField(blank=True, choices=[('1', 'create_user_product'), ('2', 'update_user_product'), ('3', 'preview_mockup'), ('4', 'push_all_user_product_to_shop'), ('5', 'upload_artwork_chunk')], default='1', max_length=2)),
                ('rate_limit', models.IntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rate_limits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Rate Limit',
                'verbose_name_plural': 'User Rate Limits',
                'db_table': 'user_rate_limit',
                'ordering': ['id'],
            },
        ),
        migrations.AddIndex(
            model_name='userlimit',
            index=models.Index(fields=['user', 'view'], name='user_rate_l_user_id_392466_idx'),
        ),
        migrations.RunSQL("CREATE OR REPLACE FUNCTION check_rate_limit(IN view text, IN user_id bigint)"
                          + "     returns bool AS"
                          + " $$"
                          + " declare"
                          + "     current_window_seq   text;"
                          + "     previous_window_seq  text;"
                          + "     current_window_time  timestamp;"
                          + "     previous_window_time timestamp;"
                          + "     current_remain       int;"
                          + "     previous_remain      int;"
                          + "     user_view_prefix     text;"
                          + "     rate_limit           int;"
                          + " "
                          + " BEGIN"
                          + "     user_view_prefix = concat('rate_limit_', view, '_', user_id, '_');"
                          + "     BEGIN"
                          + "         current_window_time := current_timestamp::timestamp;"
                          + "         current_window_seq := concat(user_view_prefix, to_char(current_window_time, 'DDMMYYHH24'));"
                          + "         current_remain = nextval(current_window_seq);"
                          + "     EXCEPTION"
                          + "         when undefined_table then"
                          + "             rate_limit = 10;"
                          + "             EXECUTE 'select * from (select rate_limit from user_rate_limit where user_id = ' || user_id ||"
                          + "                     ' and view = ''' || view || '''"
                          + "                     union all"
                          + "                     select rate_limit from user_rate_limit_default where view = ''' || view || '''"
                          + "                     union all"
                          + "                     select 100) as limits limit 1;' into current_remain;"
                          + "             EXECUTE 'CREATE SEQUENCE IF NOT EXISTS ' || current_window_seq ||"
                          + "                     ' MINVALUE -2147483648 MAXVALUE 2147483647 START '||current_remain||' INCREMENT -1 AS INT;';"
                          + "             current_remain := setval(current_window_seq, current_remain);"
                          + "         when others then"
                          + "             current_remain = 0;"
                          + "     END;"
                          + " "
                          + "     previous_window_time := current_window_time - interval '1 hours';"
                          + "     previous_window_seq := concat(user_view_prefix, to_char(previous_window_time, 'DDMMYYHH24'));"
                          + "     BEGIN"
                          + "         previous_remain := currval(previous_window_seq);"
                          + "     EXCEPTION"
                          + "         when undefined_table then"
                          + "             EXECUTE 'CREATE SEQUENCE IF NOT EXISTS ' || previous_window_seq || ' MINVALUE 0 START 0 AS INT';"
                          + "             previous_remain := setval(previous_window_seq, 0);"
                          + "         when others then"
                          + "             previous_remain = 0;"
                          + " "
                          + "     END;"
                          + "     return ((1 - extract(MINUTES FROM current_window_time) / 60) * previous_remain + current_remain) > 0;"
                          + " EXCEPTION"
                          + "     when others then"
                          + "         return false;"
                          + " END;"
                          + " $$ LANGUAGE plpgsql;"),
        migrations.RunSQL("CREATE OR REPLACE FUNCTION clear_rate_limit()"
                          + "     returns bool AS "
                          + "  $$"
                          + "  declare"
                          + "     current_window_time  timestamp;"
                          + "     previous_window_time timestamp;"
                          + "     clear_sql text;"
                          + " "
                          + "  BEGIN"
                          + "     current_window_time := current_timestamp::timestamp;"
                          + "     previous_window_time := current_window_time - interval '1 hours';"
                          + "     EXECUTE 'SELECT string_agg(''DROP SEQUENCE '' || c.oid::regclass, ''; '') || '';'' AS ddl FROM pg_class c WHERE c.relkind = ''S''"
                          + "                                 and starts_with(c.relname, ''rate_limit_'')"
                          + "                                 and c.relname not like ''%'||to_char(previous_window_time, 'DDMMYYHH24')||'''"
                          + "                                 and c.relname not like ''%'||to_char(current_window_time, 'DDMMYYHH24')||''';' into clear_sql;"
                          + "     RAISE INFO '%', clear_sql;"
                          + "     IF clear_sql is not null then"
                          + "         EXECUTE clear_sql;"
                          + "     END IF;"
                          + "     RETURN false;"
                          + "  END;"
                          + "  $$ LANGUAGE plpgsql;")
    ]
